plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.mysql:mysql-connector-j'
    //runtimeOnly 'org.postgresql:postgresql'
}

//// === ⭐ QueryDsl 빌드 옵션 (선택) ===
//def querydslDir = "$buildDir/generated/querydsl"
//sourceSets {
//    main.java.srcDirs += [ querydslDir ]
//}
//
//tasks.withType(JavaCompile).configureEach {
//    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
//    //options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
//}
//
//clean.doLast {
//    file(querydslDir).deleteDir()
//}

//// querydsl 적용
//def generated='src/main/generated'
//def querydslDir = "$buildDir/generated/querydsl"
//
//// java source set 에 querydsl QClass 위치 추가
//sourceSets {
//    main.java.srcDirs += [ generated ]
//}
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//
//// querydsl QClass 파일 위치를 잡아주는 설정
//tasks.withType(JavaCompile).configureEach {
//    it.options.getGeneratedSourceOutputDirectory().set(file(generated))
//
//}
//
//// gradle clean 시에 QClass 디렉토리 삭제
//clean {
//    delete file(generated)
//}

tasks.named('test') {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}

